{
    "home": {
      "HTML": "<!DOCTYPE html>\n<html>\n<head>\n  <title>Home Page</title>\n  <meta charset=\"UTF-8\">\n  <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\n</head>\n<body>\n  <div id=\"root\"></div>\n</body>\n</html>",
      "CSS": "/* Home page styles */\nbody {\n  font-family: Arial, sans-serif;\n  margin: 0;\n  padding: 0;\n}\n\n.container {\n  max-width: 1200px;\n  margin: 0 auto;\n  padding: 20px;\n}",
      "JS": "// Home page JavaScript\ndocument.addEventListener('DOMContentLoaded', () => {\n  console.log('Home page loaded');\n  \n  // Initialize components\n  initNavigation();\n  loadContent();\n});\n\nfunction initNavigation() {\n  // Navigation initialization code\n}\n\nfunction loadContent() {\n  // Content loading logic\n}",
      "Front": "import React, { useEffect, useState } from 'react';\nimport { Link } from 'react-router-dom';\nimport './HomePage.css';\n\nconst HomePage = () => {\n  const [isLoading, setIsLoading] = useState(true);\n  const [data, setData] = useState([]);\n\n  useEffect(() => {\n    // Simulating data fetching\n    setTimeout(() => {\n      setData(['Item 1', 'Item 2', 'Item 3']);\n      setIsLoading(false);\n    }, 1000);\n  }, []);\n\n  return (\n    <div className=\"home-container\">\n      <h1>Welcome to our Application</h1>\n      {isLoading ? (\n        <p>Loading...</p>\n      ) : (\n        <ul>\n          {data.map((item, index) => (\n            <li key={index}>{item}</li>\n          ))}\n        </ul>\n      )}\n      <Link to=\"/about\">Learn more about us</Link>\n    </div>\n  );\n};\n\nexport default HomePage;",
      "Back": "const express = require('express');\nconst router = express.Router();\n\n// Home page API\nrouter.get('/', async (req, res) => {\n  try {\n    const data = await fetchHomePageData();\n    res.json({\n      success: true,\n      data\n    });\n  } catch (error) {\n    res.status(500).json({\n      success: false,\n      message: 'Failed to fetch home page data',\n      error: error.message\n    });\n  }\n});\n\nasync function fetchHomePageData() {\n  // Database query or external API call\n  return [\n    { id: 1, title: 'Getting Started', content: '...' },\n    { id: 2, title: 'Features Overview', content: '...' },\n    { id: 3, title: 'Latest Updates', content: '...' }\n  ];\n}\n\nmodule.exports = router;"
    },
    "index": {
      "HTML": "<!DOCTYPE html>\n<html>\n<head>\n  <title>Code Review Page</title>\n  <meta charset=\"UTF-8\">\n  <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\n</head>\n<body>\n  <div id=\"root\"></div>\n</body>\n</html>",
      "CSS": "/* Code Review page styles */\n.code-review-container {\n  background-color: #f5f5f5;\n  padding: 20px;\n  border-radius: 8px;\n}\n\n.code-block {\n  background-color: #282c34;\n  color: #abb2bf;\n  padding: 15px;\n  border-radius: 4px;\n  overflow-x: auto;\n  margin: 15px 0;\n}",
      "JS": "// Code Review page JavaScript\nfunction initCodeReview() {\n  const codeBlocks = document.querySelectorAll('.code-block');\n  \n  codeBlocks.forEach(block => {\n    // Add syntax highlighting\n    highlightCode(block);\n    \n    // Add copy button\n    addCopyButton(block);\n  });\n}\n\nfunction highlightCode(element) {\n  // Implementation for syntax highlighting\n}\n\nfunction addCopyButton(element) {\n  // Implementation for copy functionality\n}",
      "Front": "import React, { useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport './CodeReviewPage.css';\n\nconst CodeReviewPage = () => {\n  const { id } = useParams();\n  const [activeTab, setActiveTab] = useState('issues');\n  const [comments, setComments] = useState([]);\n  \n  const handleAddComment = (comment) => {\n    setComments([...comments, { id: Date.now(), text: comment, user: 'You' }]);\n  };\n  \n  return (\n    <div className=\"code-review-container\">\n      <h1>Code Review: #{id}</h1>\n      \n      <div className=\"tabs\">\n        <button \n          className={activeTab === 'issues' ? 'active' : ''}\n          onClick={() => setActiveTab('issues')}\n        >\n          Issues\n        </button>\n        <button \n          className={activeTab === 'discussion' ? 'active' : ''}\n          onClick={() => setActiveTab('discussion')}\n        >\n          Discussion\n        </button>\n      </div>\n      \n      <div className=\"tab-content\">\n        {activeTab === 'issues' ? (\n          <div className=\"issues-list\">\n            {/* Issues content */}\n          </div>\n        ) : (\n          <div className=\"discussion\">\n            {comments.map(comment => (\n              <div key={comment.id} className=\"comment\">\n                <strong>{comment.user}:</strong> {comment.text}\n              </div>\n            ))}\n            <textarea \n              placeholder=\"Add your comment...\"\n              onKeyDown={(e) => {\n                if (e.key === 'Enter' && !e.shiftKey) {\n                  e.preventDefault();\n                  handleAddComment(e.target.value);\n                  e.target.value = '';\n                }\n              }}\n            />\n          </div>\n        )}\n      </div>\n    </div>\n  );\n};\n\nexport default CodeReviewPage;",
      "Back": "const express = require('express');\nconst router = express.Router();\nconst auth = require('../middleware/auth');\nconst CodeReview = require('../models/CodeReview');\n\n// Get all code reviews\nrouter.get('/', auth, async (req, res) => {\n  try {\n    const codeReviews = await CodeReview.find()\n      .sort({ createdAt: -1 })\n      .populate('author', 'name');\n      \n    res.json(codeReviews);\n  } catch (error) {\n    res.status(500).json({ message: error.message });\n  }\n});\n\n// Get a specific code review\nrouter.get('/:id', auth, async (req, res) => {\n  try {\n    const codeReview = await CodeReview.findById(req.params.id)\n      .populate('author', 'name')\n      .populate('comments.user', 'name');\n      \n    if (!codeReview) {\n      return res.status(404).json({ message: 'Code review not found' });\n    }\n    \n    res.json(codeReview);\n  } catch (error) {\n    res.status(500).json({ message: error.message });\n  }\n});\n\n// Create a new code review\nrouter.post('/', auth, async (req, res) => {\n  const { title, description, code, language } = req.body;\n  \n  try {\n    const newCodeReview = new CodeReview({\n      title,\n      description,\n      code,\n      language,\n      author: req.user.id\n    });\n    \n    const savedCodeReview = await newCodeReview.save();\n    res.status(201).json(savedCodeReview);\n  } catch (error) {\n    res.status(400).json({ message: error.message });\n  }\n});\n\nmodule.exports = router;"
    }
  }